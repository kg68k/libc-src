┌───────────────────────────────────┐
│                                                                      │
│   x68000 SCSI                        Version  0.10                   │
│                                      last update 91.12.xx            │
│                                                                      │
└───────────────────────────────────┘

SCSI Disk Map

    LBA
     $00┌─────────────┐
        │         マーカ           │ →   x68kで使用可能かどうかのマーカ
     $02├─────────────┤      (x68kでformatしたかどうか?)
        │        IPL MENU          │
     $04├─────────────┤
        │    パーティション情報    │ →   このディスクをどのように分割してい
     $06├─────────────┤      るかを差す情報領域。どのパーティ
        │                          │      ションから自動起動するかもここで指
        │    このディスク用の      │      定する。
        │    デバイスドライバ      │
        │                          │ →   ディスク単位で別々のドライバをロー 
        │                          │      ドさせる事ができる。但しデバイス
        │                          │      ヘッダにある名前は`SCSIDISK'でなけ
        ├─────────────┤      れば認識を行なわない。
        │                          │
        │          空き            │
        │                          │
     $40┝━━━━━━━━━━━━━┥
        │  パーティション#1用IPL   │ →   IPLプログラムそのもの。但しIPLプロ
     $42├─────────────┤      グラム中にデータとしてBPBそのもの
       .│           FAT            │      を持っている。ドライバの初期処理で
       .├─────────────┤      各パーティション用のIPLを読漁って
       .│    ルートディレクトリ    │      ユニット別のBPBをクリエイトする。
       .├─────────────┤      (註 : BPBはHuman2.00から変更されて
        │                          │            いる。後述)
        │                          │      この領域がDOSから見た時の論理ゼロ
        │         データ部         │      セクタ(先頭クラスタ)の位置となる。
        │                          │
        │                          │
        ┝━━━━━━━━━━━━━┥
        │  パーティション#2用IPL   │
        ├─────────────┤
        │           FAT            │
        ├─────────────┤
        │            .             │
        │            .             │
        │            .             │
        │            .             │

    LBAの値は 物理フォーマット長 = 512 の場合

    Humanでの制限事項

        何故かHumanの世界ではLBAが24bitとして利用されている。SCSI規格では32Bit
        あるのに、こんなところで制限をつけるから1ドライブ16ギカという変な制限
        が出てくるのである。まったくもって技術進歩の妨げである。この制限を作り
        出している悪いやつはドライバ本体と LBA = 0004 のパーティション情報だけ
        なので、この壁を超えるのはいとも簡単である。


1.ディスクマーカ

        LBA = $00_0000

     $00┌────────┐
        │                │ →   このディスクの認識用文字列
        │   (byte)*8     │      `X68SCSI1'でなければならない
     $08├────────┤
        │    (word)      │ →   このディスクの物理フォーマット長
     $0a├────────┤      (READCAPの右ロングワードをワードにパックした値)
        │                │ →   このディスクのLBAの最大値
        │    (long)      │      (READCAPの左ロングワードの値)
     $0e├────────┤
        │    (word)      │ →   不明 (常に $0100)
     $10├────────┤
        │                │ →   K.G. (某社の入れたメッセージ)
        │                │      この領域は破壊可能
        │   (byte)*35    │
     $32│                │
     $33├────────┤
       .│                │ →   未使用領域
       .│                │
       .│                │
       .│  (byte)*case   │
        │                │
        │                │
        │                │
        └────────┘



2.IPL MENU

        LBA = $00_0002

   $0000┌────────┐
        │                │  言わずと知れたディスクIPLメニューのSCSI版
        │                │
        │                │  1024バイトしかないが、これより大きいメニューを
        │                │  乗せたい場合は空き領域に本体を乗せ、この領域の
        │                │  プログラムでそこからロードすれば大きさの制限は
        │                │  ない。
        │                │
        │    1024byte    │  HELP keyを押しながらIPLさせると、この領域のプロ
        │                │  グラムがロードされ実行される。現バージョンのIPL
        │                │  MENUはSCSI IDを0→7へとサーチし、最初に見つかっ
        │                │  たドライブからロードされている。
        │                │  (巷の噂ではID 0固定と言われているが実際にはそう
        │                │   ではないようである)
        │                │
        │                │  尚、IPL MENUで選択した領域が以後の自動起動の対
   $03ff└────────┘  象パーティションとなり、実際にはパーティション
                              情報の領域が更新される。


3.パーティション情報

        LBA = $00_0004

    $000┌────────┐
        │   (byte)*4     │ →   マーカ (`X68K'でなければならない)
    $004├────────┤
        │    (long)      │ →   Humanで使用可能な論理ブロック数
    $008├────────┤ ┐   (パーティションごとのサイズの合計値)
        │    (long)      │ │
    $00c├────────┤ │→ このディスクの論理ブロック数
        │    (long)      │ │       なぜ$08と$0cの領域に2箇所書かれているの
    $010├────────┤ ┘       かは今だに不明である。
        │                │
        │                │ →   パーティション情報
        │                │          1パーティションの情報(後述)は16バイトで
        │                │          構成され最大15パーティション分の領域を
        │  (16byte)*15   │          管理する。15パーティション以上分割しよ
        │                │          うとしてもformat.xがさせてくれない。
        │                │          パーティションを修正するとこの領域が書
    $0ff│                │          き直され上から詰め直される。15以下の
    $100├────────┤          パーティションの場合は$00...で埋められる
        │                │
        │                │
        │                │ →   format.xで表示すべき文字列の集合体。
        │                │          各文字列のターミネータは NUL.NUL.NUL.
        │   (byte)*256   │          最後の文字列以降はすべてNUL。
        │                │
        │                │
        │                │
    $1ff│                │
        └────────┘


        ここで論理ブロック数とは次の計算式で求められる。

                ステップ数 = 物理フォーマット長 / 256   として
                             (READCAPの右ロングワードの値)

                論理ブロック数 = 物理ブロック数 / ステップ数
                                 (LBAの値)


        1パーティションの情報

      $0┌────────┐
        │                │
        │                │ →   OSの名称
        │    (byte)*8    │
        │                │
      $8├────────┤
        │    (byte)      │ →   このパーティションの使用可否
      $9├────────┤      (00:自動起動, 01:使用不可, 02:使用可能)
        │                │
        │                │ →   論理ゼロセクタの位置を指す論理ブロック番号
        │     24bit      │
        │                │
      $c├────────┤
        │    (byte)      │ →   常に$00
      $d├────────┤
        │                │
        │                │ →   このパーティションのサイズを表わす論理
        │     24bit      │      ブロック数
      $f│                │
        └────────┘



4.このディスク用のデバイスドライバ

        LBA = $00_0006

   $0000┌────────┐
        │                │  x68kではSCSIバス上に複数のDISK装置が接続されて
        │                │  いた場合、それぞれの装置ごとに別々のドライバを
        │                │  ロードさせている。(まるでMacみたいだ)
        │                │  この為format.xはこの領域にひそかにデバイスドラ
        │                │  イバを埋め込んでいる。ユーザが独自に高性能なド
        │                │  ライバを作成し、この領域に書き込んでやればx68k
        │                │  の環境はもっとすばらしいものとなるだろう。
        │                │
        │    3072byte    │  x68kは某国民文房具機ではない。従って巷で噂され
        │                │  ているように、ボード上のROMで性能が決定される
        │                │  ようなダサイ構造ではないのだ。この辺を正しく理
        │                │  解していただきたいものである。
        │                │
        │                │  独自のデバイスドライバを作る上での注意点は特に
        │                │  ないが、BPBが実際にはプログラミングマニュアル
   $0bff│                │  の記述と異なっているので、ここだけを注意すれば
        └────────┘  問題ないと思われる。尚、デバイスヘッダに記述す
                              るドライバ名称は`SCSIDISK'でなければ認識されな
                              いので、これも注意が必要である。

        余談ではあるが、SCSIデバイスドライバ1.02にはバグさんがいるようである。
        複数のディスク装置をそれぞれ 1クラスタ=1セクタ、2セクタ、4セクタとな
        るようにパーティション分割して運用すると、あるときどっかのドライブが
        神隠しにあってしまうのである。またさらには管理領域が破壊されています
        攻撃も受けてしまう。format.xのタイムスタンプが 91/05/15 のものは内蔵
        されているSCSIデバイスドライバが1.03に上がっているので、各ディスクを
        再フォーマットして使用される方が望ましいと思われる。幸い私のところで
        は接続されているすべてのドライブのドライバを1.03に書き換えてからはこ
        の問題は発生していない。(フォーマットしないでも簡単に書き込めてしまう)


5.各パーティション用IPLプログラム


    $000┌────────┐
        │    18byte      │ →   bra.s命令につづき、KG.のマーク
    $012├────────┤
        │    20byte      │ →   BPBそのもの
    $026├────────┤
        │                │
        │                │
        │                │
        │                │
        │                │
        │                │
        │                │ →   IPLの為のプログラム
        │ 1024 - 18 - 20 │
        │    = 986byte   │
        │                │
        │                │
        │                │
        │                │
    $3ff│                │
        └────────┘


        BPBはHuman2.00からひそかに変更が加えられていた。もちろん今まで通りの
        使用方法も可能なのであるが、大容量メディアのサポートにより、BPB + 8
        にある「全領域のセクタ数」が(1 word)の領域の為に65535(64Mbyte)を超え
        ることが出来ない為である。実際には2.00からはBPBの大きさを20バイトと
        し、BPB +8 (w)の内容が$0000の時に拡張形式のBPBとして認識しているよう
        である。


        拡張されたBPBのフォーマット

     $00┌────────┐
        │     (word)     │ →   1セクタ当りのバイト数
     $02├────────┤
        │     (byte)     │ →   1クラスタ当りのセクタ数
     $03├────────┤
        │     (byte)     │ →   FAT領域の個数
     $04├────────┤
        │     (word)     │ →   予約領域のセクタ数
     $06├────────┤
        │     (word)     │ →   ルートディレクトリに入るエントリ数
     $08├────────┤
        │     (word)     │ →   全領域のセクタ数 (ここが$0000の時)─┐
     $0a├────────┤                                          │
        │     (byte)     │ →   メディアバイト            (ここが有効となる)
     $0b├────────┤                                          ↓
        │     (byte)     │ →   1個のFAT領域に使用するセクタ数  ┌──┐
     $0c├────────┤                                      ↓    │
        │     (long)     │ →   このパーティションの論理ブロック数    │
     $10├────────┤                                            ↓
        │     (long)     │ →   論理ゼロセクタの位置を指す論理ブロック番号
        └────────┘


────────────────────────────────────


この内容はある日、私がトイレで頭をぶつけたとき神のお告げにより突如閃き判った
内容なのでシャープ(株)やハード損から出た正式な内容ではありません。当然ながら
シャープ、ハドソンまたはその関係する会社に問い合わせたり、関連する書籍の会社
に問い合わせたりしてはだめなのだ。(問い合わせたらバカにされるだけなのだ)

この内容に関しては一切保証できないのだ。
この資料は煮るなり焼くなり御勝手にどーぞ。

追記しようが転載しようが仕事で使おうが売ろうが私のしったこっちゃないのだ。


     written by  書籍が出ないのなら自分で書いてしまえプロジェクト
