#
# PROJECT C Library, X68000 PROGRAMMING INTERFACE DEFINITION
# --------------------------------------------------------------------
# This file is written by the Project C Library Group,  and completely
# in public domain. You can freely use, copy, modify, and redistribute
# the whole contents, without this notice.
# --------------------------------------------------------------------
# $Id: doc,v 1.2 1993/06/24 17:27:55 mura Exp $
#


機能別索引..............................................................


	A. C標準関数
	B. DOSコール
	C. IOCSコール
	D. マルチバイト文字
	E. SCSIコール
	F. 幅広文字


A. C標準関数............................................................


o 数値演算

_fpu_off	数学ライブラリをFLOATパッケージ呼び出しにする。
_fpu_on		数学ライブラリを数値演算コプロセッサ直接駆動にする。
_is68881	数値演算コプロセッサの種類を調べる。
abs		intの値の絶対値を取得する。
acos		逆余弦arccos(x)を求める。
acosh		双曲逆余弦arccosh(x)を求める。
asin		逆正弦arcsin(x)を求める。
asinh		双曲正弦arcsinh(x)を求める。
atan		逆正接arctan(x)を求める。
atan2		逆正接arctan(y/x)を求める。
atanh		双曲逆正接arctanh(x)を求める。
atof		文字列をdouble倍精度浮動小数に変換する。
atoi		文字列を符合つきint整数に変換する。
atol		文字列を符合つきlong整数に変換する。
atow		文字列を符合つきshort整数に変換する。
ceil		x以上の整数のなかで最も小さな数を返す。
cos		余弦cos(x)を求める。
cosh		双曲余弦cosh(x)を求める。
div		int整数の除算を行う。
drand		実数の乱数を生成する。
econvert	浮動小数値を指数形式の数字列に変換する。
ecvt		浮動小数値を指数形式の数字列に変換する。
exp		e^xを求める。
fabs		xの絶対値を返す。
fconvert	浮動小数値を数字列に変換する。
fcvt		浮動小数値を数字列に変換する。
floor		x以下の整数のなかで最も大きな数を返す。
fmod		x/yの剰余を返す。
frexp		浮動小数点値を仮数部と指数部に分ける。
gcvt		浮動小数値をGフォーマット形式の文字列に変換する。
isinf		無限大かどうかを調べる。
isnan		非数かどうかを調べる。
labs		longの値の絶対値を取得する。
ldexp		xに2^expを乗じた値を返す。
ldiv		long整数の除算を実行する。
log		自然対数log(x)を求める。
log10		常用対数log10(x)を求める。
max		2つの最大値を求める。
min		2つの最小値を求める。
modf		整数部と小数部にわける。
pow		累乗x^yを求める。
rand		整数の乱数を生成する。
random		整数の乱数を生成する。
sin		正弦sin(x)を求める。
sinh		双曲正弦sinh(x)を求める。
sqrt		平方根√xを求める。
srand		乱数シードを初期化する。
srandom		乱数シードを初期化する。
strtod		文字列をdouble倍精度浮動小数に変換する。
strtol		文字列をlong整数に変換する。
strtoul		文字列をunsignedlong整数に変換する。
tan		正接tan(x)を求める。
tanh		双曲正接tanh(x)を求める。
wabs		shortの値の絶対値を取得する。

o プロセスの環境設定・取得

clearenv	プロセスの環境変数テーブルをクリアする。
fpathconf	パス名に関する情報を取り出す。
getenv		環境変数の値を取得する。
getopt		引数配列からオプション文字列を解析する。
getrlimit	システム制限値を取得する。
pathconf	パス名に関する情報を取り出す。
putenv		環境変数を登録/変更/削除する。
setrlimit	システム制限値を再設定する。
sysconf		システムに関する情報を取り出す。
uname		システムに関する情報を取得する。

o コンソール直接入出力

cgets		コンソールからの直接1行入力する。
cprintf		直接コンソールへフォーマット出力する。
cputs		直接コンソールへ1行出力する。
getch		コンソールから直接1文字を入力する(エコーなし)。
getche		コンソールから直接1文字を入力する(エコーあり)。
kbhit		コンソールへの入力の有無を調べる。
putch		コンソールへ直接1文字を出力する。
ungetch		コンソールにデータを押し戻す。

o 文字の判定と変換

_tolower	大文字を小文字に変換する。
_toupper	小文字を大文字に変換する。
isalnum		英数字かどうかを調べる。
isalpha		アルファベットかどうかを調べる。
isascii		7ビットASCII文字かどうかを調べる。
isblank		ブランク文字かどうかを調べる。
iscntrl		制御文字かどうかを調べる。
isdigit		数字かどうかを調べる。
isgraph		表示可能文字かどうかを調べる。
isiso		8ビットISO文字かどうかを調べる。
islower		英小文字かどうかを調べる。
isodigit	8進数字かどうかを調べる。
isprint		印字可能文字かどうかを調べる。
ispunct		記号文字かどうかを調べる。
isspace		空白文字かどうかを調べる。
isupper		英大文字かどうかを調べる。
isxdigit	16進数字かどうかを調べる。
toascii		7ビットASCII文字に変換する。
toiso		8ビットISO文字に変換する。
tolower		大文字を小文字に変換する。
toupper		小文字を大文字に変換する。

o 低水準ファイル入出力とファイル名操作

_addlastsep	パス名の最後にパス区切り記号を付加する。
_dellastsep	パス名の最後のパス区切り記号を削除する。
_fullentry	ファイル名をフルパスに展開する。
_fullpath	ファイル名をフルパスに展開する。
_getdriveno	ファイル名から論理ドライブ番号を求める。
_makepath	パスの各要素からパス名を構成する。
_mode2dos	ファイルモードを拡張UNIXアクセスモードからMS-DOSファイルアトリビュートに変換する。
_mode2unix	ファイルモードをMS-DOSファイルアトリビュートから拡張UNIXアクセスモードに変換する。
_splitpath	パスを構成要素に分解する。
_sysroot	環境変数SYSROOTを用いてパス名を再構成する。
_tobslash	パス名に含まれるパス区切り記号をバックスラッシュに変換する。
_toslash	パス名に含まれるパス区切り記号をすべてスラッシュに変換する。
access		ファイルにアクセスできるかどうかを調べる。
chdir		カレントワーキングディレクトリを変更する。
chdrive		カレントドライブを変更する。
chmod		ファイルのアクセスモードを変更する。
chown		ファイルのオーナーおよびグループを変更する。
chsize		ファイルの長さを変更する。
close		ファイルをクローズする。
closedir	ディレクトリストリームをクローズする。
commit		ファイルアクセスのバッファをフラッシュする。
creat		新しいファイルの作成と書き込みモードでオープンする。
dup		ファイルハンドルを複製する。
dup2		ファイルハンドルを複製する。
fchmod		ファイルのアクセスモードを変更する。
fchown		ファイルのオーナーおよびグループを変更する。
fcntl		ファイルとファイルハンドルの操作を行う。
filelength	ファイルの長さを求める。
ftruncate	ファイルの長さを変更する。
ftw		ファイルツリーを探索する。
getcwd		カレントワーキングディレクトリを取得する。
getdcwd		指定ドライブのカレントワーキングディレクトリを取得する。
getdrive	カレントドライブを取得する。
getwd		カレントワーキングディレクトリを取得する。
isatty		端末デバイスであるかどうかを調べる。
locking		ファイル中の領域ロックの設定/解除を実行する。
lseek		ファイルポインタの位置を再設定する。
mkdir		ディレクトリを作成する。
mktemp		テンポラリファイル名を作成する。
open		ファイルをオープンする。
opendir		ディレクトリストリームをオープンする。
read		ファイルから読み込む。
readdir		次のディレクトリストリームの内容を読み込む。
readlink	シンボリックリンクファイルのリンク先を取得する。
remove		ファイル/ディレクトリを削除する。
rename		ファイル名を変更する。
rewinddir	ディレクトリストリームの位置を先頭に戻す。
rmdir		ディレクトリを削除する。
seekdir		ディレクトリストリームの位置を変更する。
stat		ファイルのステータス情報を取得する。
symlink		シンボリックリンクファイルを作成する。
tell		ファイルポインタの位置を調べる。
telldir		ディレクトリストリームのポインタ位置を返す。
truncate	ファイルの長さを変更する。
umask		ファイルモードの新規作成用マスクを設定する。
unlink		ファイルを削除する。
utime		ファイルのタイムスタンプを変更する。
write		ファイルへ書き込む。

o 割り込み処理

IJUMP		rts命令を用いた大域ジャンプを実行する。
IJUMP_RTE	割り込みルーチンの宣言とrte命令へのジャンプを実行する。
IRTE		割り込みルーチンの宣言とrte命令による復帰を実行する。
IRTS		全レジスタを保存する関数を宣言する。
PRAMREG		パラメータレジスタ渡しのためのレジスタを指定する。
RETREG		パラメータレジスタ渡しのためのレジスタを指定する。
SET_FRAME	フレームポインタに使用するレジスタを指定する。
_harderr	TRAP14によるクリティカルエラーの処理を行う。
intlevel	CPUステータスレジスタの割り込みマスクを設定する。

o 大域ジャンプ

longjmp		大域ジャンプを実行する。
setjmp		大域ジャンプ用のジャンプポイントを設定する。
siglongjmp	大域ジャンプを実行する。
sigsetjmp	大域ジャンプ用のジャンプポイントを設定する。

o メモリ管理

alloca		スタックフレームからメモリを割り当てる。
brk		ブレーク値を設定する。
calloc		メモリブロックを確保する。
chkml		空きメモリ容量をバイト単位で調べる。
free		メモリブロックを解放する。
fmallocmap	ヒープ領域の使用状況を出力する。
malloc		メモリブロックを確保する。
mallocmap	ヒープ領域の使用状況を出力する。
rbrk		ブレーク値をリセットする。
realloc		メモリブロックを再確保する。
sbrk		ブレーク値を変更する。
sizmem		空きメモリ容量をロングワード単位で調べる。

o プロセス操作

abort		カレントプロセスを異常終了させる。
assert		プログラム診断を行う。
atexit		プロセス終了時に呼び出される関数を登録する。
execl		プログラムを実行する。
execle		プログラムを実行する (環境指定)。
execlp		プログラムを実行する (パス指定)。
execv		引数配列でプログラムを実行する。
execve		引数配列でプログラムを実行する (環境指定)。
execvp		引数配列でプログラムを実行する (パス指定)。
exit		プロセスを終了させる。
nice		カレントプロセスの優先度を変更する。
onexit		プロセス終了時に必ず呼び出される関数を登録する。
spawnl		子プロセスを実行する。
spawnle		子プロセスを実行する (環境指定)。
spawnlp		子プロセスを実行する (パス指定)。
spawnv		引数配列で子プロセスを実行する。
spawnve		引数配列で子プロセスを実行する (環境指定)。
spawnvp		引数配列で子プロセスを実行する (パス指定)。
system		シェルコマンドを実行する。

o シグナル操作

alarm		アラームシグナルを設定する。
kill		プロセスに対してシグナルを送信する。
pause		シグナルを受信するまでプロセスの実行を中断する。
psignal		標準出力にシグナルメッセージを出力する。
raise		自プロセスに対してシグナルを発行する。
sigaction	シグナル発生時の動作を再設定または取得する。
sigaddset	シグナルセットへの追加を実行する。
sigblock	シグナルをブロックする。
sigdelset	シグナルセットからの削除を実行する。
sigemptyset	シグナルセットの初期化を実行する。
sigfillset	シグナルセットを初期化し，すべてのシグナルを設定する。
sigismember	シグナルセットに指定したシグナルが設定されているかどうかを調べる。
signal		シグナルハンドラを設定または登録する。
sigpending	現在ペンディング状態にあるシグナルのセットを取得する。
sigprocmask	ブロックシグナルセットを取得または変更する。
sigsetmask	現在のプロセスシグナルマスクを設定する。
sigsuspend	シグナルが配信されるのを待つ。

o ソート

bsearch		ソート済みの配列に対してバイナリサーチを行う。
qsort		配列をクイックソートによって整列させる。

o 標準ファイル入出力

clearerr	ファイルストリームのエラーおよび終端指示子をクリアする。
eprintf		標準エラー出力ファイルストリームにフォーマット出力を行う。
fclose		ファイルストリームをクローズする。
fcloseall	すべてのファイルストリームをクローズする。
fdopen		ファイルハンドルに対するファイルストリームをオープンする。
feof		ファイルストリームの終端指示子を調べる。
ferror		ファイルストリームのエラー指示子を調べる。
fflush		ファイルストリームをフラッシュする。
fgetc		ファイルストリームから1バイトを取り出す。
fgetpos		ストリームのファイルポインタの位置を取得する。
fgets		ファイルストリームから文字列を取り出す。
fileno		ファイルストリームに関連するファイルハンドルを取得する。
flushall	すべてのファイルストリームをフラッシュする。
fmode		ファイルストリームの変換モードを変更する。
fopen		ファイルストリームをオープンする。
fprintf		指定したファイルストリームにフォーマット出力を行う。
fputc		ファイルストリームにバイトデータを出力する。
fputs		ファイルストリームに文字列を出力する。
fread		ファイルストリームからデータ列を取り込む。
freopen		ファイルストリームを再オープンする。
fscanf		指定したファイルストリームからフォーマット入力を行う。
fseek		ファイルストリームのファイルポインタの位置を再設定する。
fsetpos		ファイルストリームのファイルポインタの位置を元に戻す。
ftell		ファイルストリームのファイルポインタの位置を取得する。
fwrite		ファイルストリームにデータ列を書き込む。
getc		ファイルストリームから1バイトを取り出す。
getchar		標準入力ファイルストリームから1バイトを取り出す。
gets		標準入力ファイルストリームから文字列を取り出す。
getw		ファイルストリームからワードデータを取り出す。
pclose		プロセスとの間の入出力用パイプストリームをクローズする。
perror		標準出力にエラーメッセージを出力する。
popen		プロセスとの間の入出力用パイプストリームをオープンする。
printf		標準出力ファイルストリームにフォーマット出力を行う。
putc		ファイルストリームにバイトデータを出力する。
putchar		標準出力ファイルストリームにバイトデータを出力する。
puts		標準出力ファイルストリームに文字列を出力する。
putw		ファイルストリームにワードデータを出力する。
rewind		ファイルストリームのファイルポインタを先頭に戻す。
scanf		標準入力ファイルストリームからフォーマット入力を行う。
setbuf		ファイルストリームにバッファを割り当てる。
setmode		ファイルの変換モードを変更する。
setvbuf		ファイルストリームにバッファを割り当てる。
sprintf		文字列に対してフォーマット出力を行う。
sscanf		文字列からフォーマット入力を実行する。
tempnam		テンポラリファイル名を作成する。
tmpfile		テンポラリファイルを作成する。
tmpnam		テンポラリファイル名を作成する。
ungetc		入力ファイルストリームにデータを押し戻す。
vfprintf	可変長引数リストをフォーマット出力する。
vfscanf		ファイルストリームから可変長引数リストを用いてフォーマット入力を実行する。
vprintf		可変長引数リストをフォーマット出力する。
vscanf		標準入力ファイルストリームから可変長引数リストを用いてフォーマット入力を実行する。
vsprintf	可変長引数リストをフォーマット出力する。
vsscanf		文字列から可変長引数リストを用いてフォーマット入力を実行する。

o 文字列とメモリ領域の操作

bcmp		2つの領域の内容を比較する。
bcopy		領域をコピーする。
bzero		領域を0で埋める。
ffs		セットされたビットを検索する。
index		文字列中から指定文字を検索する。
memccpy		指定文字まで領域をコピーする。
memchr		領域中から指定文字を検索する。
memcmp		2つの領域の内容を比較する。
memcpy		領域をコピーする。
memmove		領域をコピーする。
memset		領域を指定文字で埋める。
movedata	領域をコピーする。
movmem		領域をコピーする。
repmem		メモリ領域を複数回コピーする。
rindex		文字列中から指定文字が最後に現れる位置を検索する。
setmem		領域を指定文字で埋める。
stcgfe		ファイル名(拡張子)の解析を行う。
stcgfn		ファイル名(ノード名)の解析を行う。
strbpl		ポインタ配列を作成する。
strcasecmp	2つの文字列を大文字と小文字を区別しないで比較する。
strcat		文字列をほかの文字列に連結する。
strchr		文字列中から指定文字を検索する。
strcmp		2つの文字列を比較する。
strcmpi		2つの文字列を大文字と小文字を区別しないで比較する。
strcoll		2つの文字列をロケールを用いて比較する。
strcpy		文字列をコピーする。
strcspn		指定文字列に含まれない文字が，ほかの文字列の先頭から何文字続いているかを調べる。
strdup		新しい領域を確保して文字列をコピーする。
strerror	エラーメッセージへのポインタを返す。
strftime	詳細時間の情報を文字列に変換する。
stricmp		2つの文字列を大文字と小文字を区別しないで比較する。
strins		文字列を挿入する。
strlen		文字列の長さを調べる。
strlwr		文字列を小文字に変換する。
strmfe		与えられた要素からファイル名を構成する。
strmfn		パスの各要素からパス名を構成する。
strmfp		パスの各要素からパス名を構成する。
strncasecmp	2つの文字列を大文字と小文字を区別しないで指定文字数だけ比較する。
strncat		文字列を指定文字数だけほかの文字列につけ加える。
strncmp		2つの文字列を指定文字数だけ比較する。
strncpy		文字列を指定文字数だけコピーする。
strnset		文字列を指定文字で指定文字数分だけ埋める。
strpbrk		指定文字列に含まれる文字がほかの文字列に存在するかどうかを調べる。
strrchr		文字列中から指定文字が最後に現れる位置を検索する。
strrev		文字列を前後反転させる。
strset		文字列を指定文字で埋める。
strsignal	シグナルを表す文字列を取得する。
strspn		指定文字列に含まれる文字が，ほかの文字列の先頭から何文字続いているかを調べる。
strsrt		配列をASCIIコード順にソートする。
strstr		指定文字列がほかの文字列に存在するかどうかを調べる。
strtok		文字列を指定した区切文字でトークンに分ける。
strupr		文字列を大文字に変換する。
strxfrm		2つの文字列をロケールを用いて指定文字数だけコピーする。
swab		文字を交換する。
swmem		メモリ領域を交換する。

o 時間の取得と設定

_getleaps	指定した年までの閏年の回数を調べる。
_isleap		閏年補正の必要性について調べる。
asctime		日付データを文字列に変換する。
clock		起動してから現在までの経過時間を測定する。
ctime		日付データを文字列に変換する。
difftime	2つの時刻の差を計算する。
ftime		現在の時刻を取得する。
getclock	システムクロックを取得する。
gmtime		暦時間を協定世界時間(UTC)に変換する。
localtime	暦時間を地域時間に変換する。
mktime		地域時間を暦時間に変換する。
setclock	システムクロックを設定する。
sleep		秒単位のスリープを実行する。
time		現在時刻を取得する。
tzset		タイムゾーン情報(地域時間情報)を初期化する。
usleep		マイクロ秒単位のスリープを実行する。

o ユーザー・デバイス管理

ctermid		現在のコントロール端末の名称を取得する。
cuserid		ユーザのログイン名を取得する。
endgrent	グループファイルへのアクセスを終了する。
endpwent	パスワードファイルへのアクセスを終了する。
getegid		実効グループIDを取得する。
geteuid		実効ユーザIDを取得する。
getgid		実グループIDを取得する。
getgrent	グループファイルから1データを取り出す。
getgrgid	グループファイルからグループIDでデータを検索する。
getgrnam	グループファイルからグループ名でデータを検索する。
getlogin	ユーザのログイン名を取得する。
getpgrp		プロセスグループIDを取得する。
getpid		プロセスIDを取得する。
getppid		親プロセスIDを取得する。
getpwent	パスワードファイルから1データを取り出す。
getpwnam	パスワードファイルからユーザ名でデータを検索する。
getpwuid	パスワードファイルからユーザIDでデータを検索する。
getuid		実ユーザIDを取得する。
setgid		グループIDを変更する。
setgrent	グループファイルへのアクセスをファイル先頭に戻す。
setpgid		プロセスグループIDを変更する。
setpwent	パスワードファイルへのアクセスをファイル先頭に戻す。
setsid		新しいプロセスグループIDを形成する。
setuid		ユーザIDを変更する。
ttyname		端末のデバイス名を調べる。


B. DOSコール............................................................


_dos_allclose		オープンしているすべてのファイルをクローズする。
_dos_assign		仮想ドライブ/仮想ディレクトリの割り当てリストの取得/作成/解除を行う。
_dos_breakck		ブレークチェックを設定する。
_dos_change_pr		バックグラウンドプロセスの実行権を放棄する。
_dos_chdir		カレントディレクトリを変更する。
_dos_chgdrv		カレントドライブを変更する。
_dos_chmod		ファイル属性を変更する。
_dos_cinsns		RS-232Cからの入力が可能かどうかを調べる。
_dos_close		ファイルをクローズする。
_dos_cominp		RS-232Cから1文字入力する。
_dos_common		Human68kのcommon領域を操作する。
_dos_comout		RS-232Cへ1文字出力する。
_dos_conctrl		CONデバイスの出力を直接制御する。
_dos_consns		画面への出力が可能かどうかを調べる。
_dos_coutsns		RS-232Cへの出力が可能かどうかを調べる。
_dos_create		ファイルを新規に作成する。
_dos_ctlabort		CTRL+Cアボート処理へジャンプする。
_dos_curdir		カレントディレクトリを取得する。
_dos_curdrv		カレントドライブの番号を調べる。
_dos_delete		ファイルを削除する。
_dos_diskred		ブロックデバイスへの直接入力を行う。
_dos_diskwrt		ブロックデバイスへの直接出力を行う。
_dos_drvctrl		ドライブ状態のチェックおよび設定を行う。
_dos_drvxchg		ドライブを入れ替える。
_dos_dskfre		ディスクの残り容量を調べる。
_dos_dup		ファイルハンドルを複写する。
_dos_dup0		ファイルハンドルを強制的に複写する。
_dos_dup2		ファイルハンドルを複写する。
_dos_errabort		エラーアボート処理へジャンプする。
_dos_exec		プログラムをロード/実行する。
_dos_exit		現在のプロセスを終了し，親プロセスへ復帰する。
_dos_exit2		現在のプロセスを終了し，親プロセスへ復帰する。
_dos_fatchk		指定ファイルの使用セクタが連続しているかどうかを調べる。
_dos_fatchk2		指定ファイルの使用セクタが連続しているかどうかを調べる。
_dos_fflush		ディスクのリセットを行う。
_dos_fgetc		ファイルハンドルから1バイト入力する。
_dos_fgets		ファイルハンドルから文字列を入力する。
_dos_filedate		ファイル日付/時刻の読み込みと設定を行う。
_dos_files		ファイルを検索する。
_dos_fnckey		再定義可能キーの読み込みおよび設定を行なう。
_dos_fputc		ファイルハンドルへ文字を出力する。
_dos_fputs		ファイルハンドルへ文字列を出力する。
_dos_get_pr		スレッドの管理情報を取得する。
_dos_getc		キーボードから1文字入力する。
_dos_getchar		標準入力から1文字読み込む。
_dos_getdate		現在の日付を取得する。
_dos_getdpb		ドライブパラメータブロックを取得する。
_dos_getenv		環境変数を取得する。
_dos_getfcb		ファイルコントロールブロック(FCB)を取得する。
_dos_getpdb		現在のプロセスのプロセス管理ポインタを求める。
_dos_gets		文字列を入力する。
_dos_getss		文字列を入力する。
_dos_gettim2		現在の時刻を取得する。
_dos_gettime		現在の時刻を取得する。
_dos_hendsp		漢字変換行をコントロールする。
_dos_importlnenv	lndrvの管理情報へのポインタを返す。
_dos_indosflg		Human68kのワークフラグINDOS_FLGのアドレスを取得する。
_dos_inkey		キーボードから1文字入力する。
_dos_inpout		コンソールの直接入出力を行う。
_dos_intvcg		割り込みベクタを取得する。
_dos_intvcs		割り込みベクタを設定する。
_dos_ioctrl		デバイスドライバを直接制御する。
_dos_keeppr		プロセスを常駐終了させる。
_dos_keyctrl		CONデバイスの直接入力制御を行う。
_dos_keysns		キーの入力状態の検査を行う。
_dos_kflush		入力バッファをフラッシュして，キーボード入力を行う。
_dos_kill_pr		自分自身のプロセスを削除する。
_dos_lfiles		シンボリックリンクを処理せずにファイルを検索する。
_dos_link		ハードリンクファイルを作成する。
_dos_lock		ファイルのロックを設定/解除する。
_dos_maketmp		指定したパスにテンポラリファイルを作成する。
_dos_malloc		メモリを確保する。
_dos_malloc2		メモリを指定した方法で確保する。
_dos_memcpy		バスエラーが発生するかどうかをテストする。
_dos_mfree		メモリブロックを解放する。
_dos_mkdir		ディレクトリを作成する。
_dos_move		ファイルを移動する。
_dos_nameck		ファイル名を解析する。
_dos_namests		ファイル名を解析する。
_dos_newfile		ファイルを新規に作成する。
_dos_nfiles		_dos_files()で検索された次のファイルを検索する。
_dos_open		ファイルをオープンする。
_dos_open_pr		バックグラウンドプロセスを登録する。
_dos_print		文字列を表示する。
_dos_prnout		プリンタに1文字出力する。
_dos_prnsns		プリンタへの出力が可能かどうかを調べる。
_dos_pspset		プロセス管理情報を設定する。
_dos_putchar		標準出力へ1文字出力する。
_dos_read		ファイルからデータを読み込む。
_dos_readlink		シンボリックリンクのリンク先を調べる。
_dos_rename		ファイル名を変更する。
_dos_retshell		コマンドシェルにジャンプする。
_dos_rmdir		ディレクトリを削除する。
_dos_s_malloc		メインのメモリ管理下からメモリブロックを確保する。
_dos_s_mfree		メインのメモリ管理下のメモリブロックを解放する。
_dos_s_process		サブのメモリ管理を設定する。
_dos_seek		ファイルポインタを移動する。
_dos_send_pr		指定したスレッドに対してコマンドやデータを送り，スレッドがSLEEPしていたらスレッドを起こす。
_dos_setblock		メモリブロックのサイズを変更する。
_dos_setdate		現在の日付を設定する。
_dos_setenv		環境変数を設定する。
_dos_setpdb		管理プロセスを移す。
_dos_settim2		現在の時刻を設定する。
_dos_settime		現在の時刻を設定する。
_dos_sleep_pr		カレントスレッドSLEEP状態にする。
_dos_super		スーパーバイザモードとユーザモードとを切り替える。
_dos_super_jsr		スーパーバイザ領域のプログラムをサブルーチンコールする。
_dos_suspend_pr		スレッドを強制的にSLEEP状態にする。
_dos_symlink		シンボリックリンクファイルを作成する。
_dos_time_pr		現在のタイマのカウンタ値を返す。
_dos_unlink		ハードリンクファイルを削除する。
_dos_verify		ベリファイフラグを設定する。
_dos_verifyg		ベリファイフラグの設定状況を取得する。
_dos_vernum		Human68kのバージョン番号を返す。
_dos_wait		自プロセスが直前に実行した子プロセスの終了コードを返す。
_dos_write		ファイルへデータを書き込む。


C. IOCSコール...........................................................


_iocs_abortjob		アボート処理を行う。
_iocs_abortrst		アボートするために環境の再設定を行う。
_iocs_adpcmain		ADPCMからアレイチェインモードでデータを入力する。
_iocs_adpcmaot		ADPCMへアレイチェインモードでデータを出力する。
_iocs_adpcminp		ADPCMからデータを入力する。
_iocs_adpcmlin		ADPCMからリンクアレイチェインモードでデータを入力する。
_iocs_adpcmlot		ADPCMへリンクアレイチェインモードでデータを出力する。
_iocs_adpcmmod		ADPCMの実行を制御する。
_iocs_adpcmout		ADPCMへデータを出力する。
_iocs_adpcmsns		ADPCMの実行モードを調べる。
_iocs_akconv		ANKコードからシフトJIS漢字コードに変換する。
_iocs_alarmget		アラームの時間と処理アドレスを読み込む。
_iocs_alarmmod		アラームの禁止/許可を設定する。
_iocs_alarmset		アラームの時間と処理アドレスの設定を行う。
_iocs_apage		グラフィック画面の書き込みページを設定する。
_iocs_b_badfmt		不良トラックを登録する。
_iocs_b_bpeek		メモリから1バイトデータ読み込む。
_iocs_b_bpoke		メモリに1バイトデータ書き込む。
_iocs_b_clr		カーソル位置を基準としてテキスト画面をクリアする。
_iocs_b_color		表示属性を設定する。
_iocs_b_console		テキストの表示範囲を設定する。
_iocs_b_curoff		カーソルを消去する。
_iocs_b_curon		カーソルを表示する。
_iocs_b_del		カーソル表示行を削除する。
_iocs_b_down		カーソル位置を指定行数だけ下へ移動する。
_iocs_b_down_s		カーソル位置を1行下へ移動する。
_iocs_b_drvchk		フロッピーディスクドライブの状態の検査/設定を行う。
_iocs_b_drvsns		ディスクのステータス情報を調べる。
_iocs_b_dskini		ディスクインタフェイスを初期化する。
_iocs_b_eject		ディスクのイジェクトを行う。
_iocs_b_era		カーソル位置を基準としてテキスト画面をクリアする。
_iocs_b_format		ディスクの物理フォーマットを行う。
_iocs_b_ins		カーソル表示行の直後に行を追加する。
_iocs_b_intvcs		割り込みベクタを設定する。
_iocs_b_keyinp		キーコードの読み込みを行う。
_iocs_b_keysns		キーの先行入力の検査を行う。
_iocs_b_left		カーソル位置を指定桁数だけ左へ移動する。
_iocs_b_locate		カーソル位置を設定する。
_iocs_b_lpeek		メモリから1ロングワードデータ読み込む。
_iocs_b_lpoke		メモリに1ロングワードデータ書き込む。
_iocs_b_memset		メモリへデータを書き込む。
_iocs_b_memstr		メモリからデータを読み込む。
_iocs_b_print		文字列を表示する。
_iocs_b_putc		1文字表示する。
_iocs_b_putmes		表示位置を指定して文字列を表示する。
_iocs_b_read		ディスクの読み込みを行う。
_iocs_b_readdi		フロッピーディスクの診断のための読み込みを行う。
_iocs_b_readdl		フロッピーディスクの削除データを読み込む。
_iocs_b_readid		フロッピーディスクのIDデータを読み込む。
_iocs_b_recali		トラック0へシークする。
_iocs_b_right		カーソル位置を指定桁数だけ右へ移動する。
_iocs_b_seek		指定トラックまでシークする。
_iocs_b_sftsns		シフトキーの押下げ状態を検査する。
_iocs_b_super		スーパーバイザモードとユーザモードとを切り替える。
_iocs_b_up		カーソル位置を指定行数だけ上へ移動する。
_iocs_b_up_s		カーソル位置を1行上へ移動する。
_iocs_b_verify		データの比較を行う。
_iocs_b_wpeek		メモリから1ワードデータ読み込む。
_iocs_b_wpoke		メモリに1ワードデータ書き込む。
_iocs_b_write		ディスクにデータを書き込む。
_iocs_b_writed		フロッピーディスクへ削除データを書き込む。
_iocs_bgctrlgt		バックグラウンドコントロールレジスタを読み込む。
_iocs_bgctrlst		バックグラウンドコントロールレジスタを設定する。
_iocs_bgscrlgt		バックグラウンドスクロールレジスタを読み込む。
_iocs_bgscrlst		バックグラウンドスクロールレジスタを設定する。
_iocs_bgtextcl		バックグラウンドテキストをクリアする。
_iocs_bgtextgt		バックグラウンドテキストを読み込む。
_iocs_bgtextst		バックグラウンドテキストを設定する。
_iocs_bindatebcd	2進数の日付を内部時計にセットできる形式に変換する。
_iocs_bindateget	内部時計から日付を読み込む。
_iocs_bindateset	内部時計に日付を設定する。
_iocs_bitsns		指定キーの押下げ状態を検査する。
_iocs_bootinf		パワーON情報とシステムのブート情報を返す。
_iocs_box		グラフィック画面にボックスを描画する。
_iocs_circle		グラフィック画面に円を描画する。
_iocs_clipput		テキスト画面にパターンを書き出す(クリッピング処理つき)。
_iocs_contrast		画面のコントラストを設定する。
_iocs_crtcras		CRTCのラスタ割り込みを設定する。
_iocs_crtmod		画面モードを設定する。
_iocs_dakjob		濁点処理を行う。
_iocs_dateasc		日付を表す2進数形式のデータを文字列に変換する。
_iocs_datebin		日付の形式をBCDから2進数に変換する。
_iocs_datecnv		日付を表す文字列を2進数形式に変換する。
_iocs_dayasc		曜日を表す2進数のデータを文字列に変換する。
_iocs_defchr		外字パターンを設定する。
_iocs_densns		電卓処理を行う。
_iocs_dmamode		DMAの実行モードを調べる。
_iocs_dmamov_a		アレイチェインモードでDMA転送を行う。
_iocs_dmamov_l		リンクアレイチェインモードでDMA転送を行う。
_iocs_dmamove		DMA転送を行う。
_iocs_fill		グラフィック画面に塗りつぶしたボックスを描画する。
_iocs_fntget		漢字パターンを取得する。
_iocs_g_clr_on		グラフィック画面のクリア/表示を行う。
_iocs_getgrm		グラフィック画面からデータを読み込む。
_iocs_gpalet		グラフィックパレットを設定する。
_iocs_hanjob		半濁点処理を行う。
_iocs_home		グラフィック画面の表示開始位置を設定する。
_iocs_hsvtorgb		HSV方式からRGB方式への色変換を行う。
_iocs_hsyncst		H--SYNC(水平同期信号)割り込みを設定する。
_iocs_init_prn		プリンタポートの初期化を行う。
_iocs_inp232c		RS--232Cの受信バッファから1バイトデータ読み込む。
_iocs_iplerr		IPLエラー時の処理を行う。
_iocs_isns232c		RS--232Cの受信バッファ内にデータがあるかどうかを調べる。
_iocs_jissft		JIS漢字コードからシフトJIS漢字コードに変換する。
_iocs_joyget		ジョイスティックのデータを取得する。
_iocs_ledmod		LEDつきキーの設定を行う。
_iocs_line		グラフィック画面にラインを描画する。
_iocs_lof232c		RS--232Cの受信バッファ内のデータ数を調べる。
_iocs_ms_curgt		マウスカーソルの座標を調べる。
_iocs_ms_curof		マウスカーソルを消去する。
_iocs_ms_curon		マウスカーソルを表示する。
_iocs_ms_curst		マウスカーソルの座標を設定する。
_iocs_ms_getdt		マウスの移動量とボタンの状態を調べる。
_iocs_ms_init		マウスを初期化する。
_iocs_ms_limit		マウスカーソルの移動範囲を設定する。
_iocs_ms_offtm		マウスボタンを離すまでの時間を調べる。
_iocs_ms_ontm		マウスボタンを押すまでの時間を調べる。
_iocs_ms_patst		マウスカーソルのパターンを定義する。
_iocs_ms_sel		マウスカーソルを選択する。
_iocs_ms_sel2		マウスカーソルを複数選択し，アニメーションを作成する。
_iocs_ms_stat		マウスカーソルの表示モードを調べる。
_iocs_ontime		電源投入またはリセットしてからの経過時間を調べる。
_iocs_opmintst		FM音源IC(YM2151)による割り込みを設定する。
_iocs_opmset		FM音源(YM2151)にデータを書き込む。
_iocs_opmsns		FM音源(YM2151)のステータスを読む。
_iocs_os_curof		カーソルを消去する。
_iocs_os_curon		カーソルを表示する。
_iocs_osns232c		RS--232Cが送信可能かどうかを調べる。
_iocs_out232c		RS--232Cへ1バイト送信する。
_iocs_outlpt		プリンタへの直接出力を行う。
_iocs_outprn		プリンタにデータを出力する。
_iocs_paint		グラフィック画面のペイントを行う。
_iocs_point		グラフィック画面の指定座標のパレットコードを調べる。
_iocs_prnintst		プリンタ割り込みを設定する。
_iocs_pset		グラフィック画面に点を描画する。
_iocs_putgrm		グラフィック画面にデータを書き込む。
_iocs_rmacnv		ローマ字/かな変換を行う。
_iocs_romver		ROMのバージョンと作成日付を調べる。
_iocs_scroll		テキスト/グラフィックの表示開始座標を設定する。
_iocs_set232c		RS--232Cの通信モードを設定する。
_iocs_sftjis		シフトJIS漢字コードからJIS漢字コードに変換する。
_iocs_skey_mod		ソフトキーボードを制御する。
_iocs_skeyset		指定したキーが押されたことにする。
_iocs_snsprn		プリンタ出力が可能かどうかを調べる。
_iocs_sp_cgclr		PCGをクリアする。
_iocs_sp_defcg		PCGを設定する。
_iocs_sp_gtpcg		PCGを読み込む。
_iocs_sp_init		スプライト画面を初期化する。
_iocs_sp_off		スプライト画面を非表示にする。
_iocs_sp_on		スプライト画面を表示する。
_iocs_sp_reggt		スプライトレジスタを読み込む。
_iocs_sp_regst		スプライトレジスタを設定する。
_iocs_spalet		スプライトパレットの設定/読み込みを行う。
_iocs_symbol		グラフィック画面に文字を描画する。
_iocs_tcolor		テキストのカラーを選択する。
_iocs_textget		テキスト画面からデータを読み込む。
_iocs_textput		テキスト画面にデータを書き込む。
_iocs_tgusemd		画面モードを設定/取得する。
_iocs_timeasc		時刻を表す2進数形式のデータを文字列に変換する。
_iocs_timebcd		2進数の時刻を内部時計にセットできる形式に変換する。
_iocs_timebin		時刻をBCD形式から2進数形式へ変換する。
_iocs_timecnv		時刻を表す文字列を2進数形式に変換する。
_iocs_timeget		内部時計から時刻を読み込む。
_iocs_timerdst		MFPのTIMER--Dによる割り込みを設定する。
_iocs_timeset		内部時計に時刻を設定する。
_iocs_tpalet		テキストパレットを設定する。
_iocs_tpalet2		テキストパレットを設定する。
_iocs_trap15		内部割り込み(trap#15)を直接実行する。
_iocs_tvctrl		専用テレビを操作する。
_iocs_txbox		テキスト画面にボックスを描画する。
_iocs_txfill		テキスト画面に塗りつぶしたボックスを描画する。
_iocs_txrascpy		テキスト画面のラスタコピーを行う。
_iocs_txrev		テキスト画面を反転する。
_iocs_txxline		テキスト画面に水平方向のラインを描画する。
_iocs_txyline		テキスト画面に垂直方向のラインを描画する。
_iocs_vdispst		垂直同期による割り込みを設定する。
_iocs_vpage		グラフィック画面の表示ページを設定する。
_iocs_window		グラフィック画面のウィンドウを設定する。
_iocs_wipe		グラフィック画面を消去する。


D. マルチバイト文字.....................................................


ismbbalnum	半角英数字/半角カタカナかどうかを調べる。
ismbbalpha	半角英字/半角カタカナかどうかを調べる。
ismbbgraph	半角スペース以外の表示可能文字かどうかを調べる。
ismbbkalnum	半角カタカナかどうかを調べる。
ismbbkana	半角カナ文字かどうかを調べる。
ismbbkpunct	半角カナ記号かどうかを調べる。
ismbblead	全角文字の第1バイトかどうかを調べる。
ismbbprint	半角印字可能文字かどうかを調べる。
ismbbpunct	半角記号/半角カナ記号かどうかを調べる。
ismbbtrail	全角文字の第2バイトかどうかを調べる。
ismbcalpha	全角英字かどうかを調べる。
ismbcdigit	全角数字かどうかを調べる。
ismbchira	全角ひらがなかどうかを調べる。
ismbckata	全角カタカナかどうかを調べる。
ismbcl0		JIS非漢字かどうかを調べる。
ismbcl1		JIS第1水準漢字かどうかを調べる。
ismbcl2		JIS第2水準漢字かどうかを調べる。
ismbclegal	正しいシフトJIS全角文字かどうかを調べる。
ismbclower	全角英小文字かどうかを調べる。
ismbcprint	印字可能文字かどうかを調べる。
ismbcspace	全角スペースかどうかを調べる。
ismbcsymbol	全角記号かどうかを調べる。
ismbcupper	全角英大文字かどうかを調べる。
mbbtombc	半角文字を全角文字に変換する。
mbbtype		バイトデータの文字種を判別する。
mbctohira	全角カタカナを全角ひらがなに変換する。
mbctokata	全角ひらがなを全角カタカナに変換する。
mbctolower	全角英大文字を全角英小文字に変換する。
mbctombb	全角文字を半角文字に変換する。
mbctoupper	全角英小文字を全角英大文字に変換する。
mblen		1マルチバイト文字の構成バイト数を調べる。
mbsbtype	文字列中の指定位置の文字種を判別する。
mbscat		シフトJIS文字列を他のシフトJIS文字列に連結する。
mbschr		シフトJIS文字列中から指定文字を検索する。
mbscmp		2つのシフトJIS文字列を比較する。
mbscpy		シフトJIS文字列をコピーする。
mbscspn		指定したシフトJIS文字列に含まれない文字が，ほかのシフトJIS文字列の先頭から何文字続いているかを調べる		
mbsdec		シフトJIS文字列のポインタを1文字分戻す。
mbsdup		新しい領域を確保してシフトJIS文字列をコピーする。
mbsicmp		2つのシフトJIS文字列を大文字/小文字を区別せずに比較する。
mbsinc		シフトJIS文字列のポインタを1文字分進める。
mbslen		シフトJIS文字列の長さを調べる。
mbslwr		シフトJIS文字列を小文字に変換する。
mbsnbcnt	シフトJIS文字列のバイト数を調べる。
mbsncat		シフトJIS文字列を指定文字数だけほかのシフトJIS文字列に追加する。
mbsnccnt	シフトJIS文字列の文字数を調べる。
mbsncmp		2つのシフトJIS文字列を指定文字数だけ比較する。
mbsncpy		シフトJIS文字列を指定文字数だけコピーする。
mbsnextc	ポインタが指す位置文字を返す。
mbsninc		シフトJIS文字列のポインタを指定文字分だけ進める。
mbsnset		シフトJIS文字列を指定文字で指定文字数だけ埋める。
mbspbrk		指定したシフトJIS文字列に含まれる文字が，ほかのシフトJIS文字列に存在するかどうかを調べる。
mbsrchr		シフトJIS文字列中から指定文字が最後に現れる位置を検索する。
mbsrev		シフトJIS文字列を前後反転させる。
mbsset		シフトJIS文字列を指定文字で埋める。
mbsspn		指定したシフトJIS文字列に含まれる文字が，ほかのシフトJIS文字列の先頭から何文字続いているかを調べる。
mbsstr		指定したシフトJIS文字列がほかのシフトJIS文字列に存在するかどうかを調べる。
mbstok		シフトJIS文字列を指定した区切り文字でトークンに分ける。
mbstowcs	マルチバイト文字列を幅広文字列に変換する。
mbsupr		シフトJIS文字列を大文字に変換する。
mbtowc		マルチバイト文字を幅広文字に変換する。


E. SCSIコール...........................................................


_scsi_cmdout		コマンドアウトフェーズを実行する。
_scsi_datain		データインフェーズを実行する。
_scsi_datain_p		データインフェーズを実行する。
_scsi_dataout		データアウトフェーズを実行する。
_scsi_dataout_p		データアウトフェーズを実行する。
_scsi_format		SCSIユニットを物理フォーマットする。
_scsi_inquiry		INQUIRYデータを要求する。
_scsi_modeselect	SCSIユニットにモードセレクトコマンドを発行する。
_scsi_modesense		SCSIユニットの各種パラメータを調べる。
_scsi_msgin		メッセージインフェーズを実行する。
_scsi_msgout		メッセージアウトフェーズを実行する。
_scsi_pamedium		SCSIユニットにメディアのイジェクトの禁止/許可を設定する。
_scsi_phase		SCSIフェーズセンスを実行する。
_scsi_read		SCSIユニットのデータを読み込む。
_scsi_readcap		SCSIユニットの容量に関する情報を読み込む。
_scsi_readext		拡張READコマンドでSCSIユニットのデータを読み込む。
_scsi_reassign		SCSIユニットの欠陥ブロックの再割り当てを行う。
_scsi_request		SCSIユニットの容量に関する情報を読み込む。
_scsi_reset		SPCのリセットおよびSCSIバスのリセットを行う。
_scsi_rezerounit	SCSIユニットを指定の状態にセットする。
_scsi_seek		SCSIユニットを指定の論理ブロックにシークする。
_scsi_select		アービトレーションフェーズとセレクションフェーズを実行する。
_scsi_startstop		SCSIユニットに対して，以降の操作を可能または不可能にする。
_scsi_stsin		ステータスインフェーズを実行する。
_scsi_testunit		SCSIユニットが動作可能かどうかを調べる。
_scsi_write		SCSIユニットにデータを書き込む。
_scsi_writeext		拡張WRITEコマンドでSCSIユニットにデータを書き込む。


F. 幅広文字.............................................................


fgetwc		ファイルストリームから1幅広文字を取り出す。
fgetws		ファイルストリームから幅広文字列を取り出す。
fputwc		ファイルストリームに幅広文字を出力する。
fputws		ファイルストリームに幅広文字列を出力する。
getwc		ファイルストリームから1幅広文字を取り出す。
getwchar	標準入力ファイルストリームから1幅広文字を取り出す。
getws		標準入力ファイルストリームから幅広文字列を取り出す。
iswalnum	英数字かどうかを調べる。
iswalpha	アルファベットかどうかを調べる。
iswascii	7ビットASCII文字かどうかを調べる。
iswcntrl	制御文字かどうかを調べる。
iswdigit	数字かどうかを調べる。
iswgraph	表示可能文字かどうかを調べる。
iswlower	英小文字かどうかを調べる。
iswprint	英大文字かどうかを調べる。
iswpunct	記号文字かどうかを調べる。
iswspace	空白文字かどうかを調べる。
iswupper	英大文字かどうかを調べる。
iswxdigit	16進数字かどうかを調べる。
putwc		ファイルストリームに幅広文字を出力する。
putwchar	標準出力ファイルストリームに幅広文字を出力する。
putws		標準出力ファイルストリームに幅広文字列を出力する。
towlower	大文字を小文字に変換する。
towupper	小文字を大文字に変換する。
ungetwc		入力ファイルストリームに幅広文字を押し戻す。
wcscat		文字列をほかの文字列に連結する。
wcschr		文字列中から指定文字を検索する。
wcscmp		2つの文字列を比較する。
wcscoll		2つの幅広文字列をロケールを用いて比較する。
wcscpy		文字列をコピーする。
wcscspn		指定文字列に含まれない文字が，ほかの文字列の先頭から何文字続いているかを調べる		
wcsdup		新しい領域を確保して文字列をコピーする。
wcslen		文字列の長さを調べる。
wcsncat		文字列を指定文字数だけほかの文字列に追加する。
wcsncmp		2つの文字列を指定文字数だけ比較する。
wcsncpy		文字列を指定文字数だけコピーする。
wcspbrk		指定文字列に含まれる文字がほかの文字列に存在するかどうかを調べる。
wcsrchr		文字列中から指定文字が最後に現れる位置を検索する。
wcsspn		指定文字列に含まれる文字が，ほかの文字列の先頭から何文字続いているかを調べる		
wcstod		幅広文字列を double 倍精度浮動小数に変換する。
wcstok		文字列を指定した区切り文字でトークンに分ける。
wcstol		幅広文字列を long 整数に変換する。
wcstombs	幅広文字列をマルチバイト文字列に変換する。
wcstoul		幅広文字列を unsigned long 整数に変換する。
wcswcs		指定文字列がほかの文字列に存在するかどうかを調べる。
wcsxfrm		2つの幅広文字列をロケールを用いて指定の幅広文字数だけコピーする。
wctomb		幅広文字をマルチバイト文字に変換する。
